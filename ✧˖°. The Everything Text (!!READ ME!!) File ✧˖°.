# This page is just used to write pseudo theory, pseudo code, and testing ideas. Update: This page is to write everything for this project in one place. 

# Group Members: Tony Zhang, Reuben Jose, Subhan Ahmad
Note: Reuben dropped but will still help us with recording the video.

----------------------------------------------------------------------------------------------------------------------------------------


Comments for the Final Project:


Subhan's comment:
Stayed accurate to the vision of a math quiz and added a score tracker which I didn't originally plan. 
Originally I wanted to have a generator that asked multiplication questions but I had trouble making it keep score. 
I chose to Addition generator as it was simpler to add a score tracker and convenient as I could change what numbers I wanted to add and ask in the problem.

Reuben’s comment: 
I really enjoyed the creative freedom of our final project, a challenge we faced was getting all the code to work especially since I was withdrawing from the class so our communication had to be on point. 
Another difficulty was learning Renpy and getting it to work on my laptop.
 


Tony's Comments on the Project:

So I just wanted to say that Github or at least the free version freaking sucks. You can't upload files that are more then 25 MB so basically there was trouble sharing files because of that.

How to overcome: Discord file sharing, if that doesn't work you share it on Google Drive, if that doesn't work you bring the hard drive to your teammates and plug that into their computers the good old fashion way.

Second, creating assets and everything from scratch is hard to do and to no surprise, the Demo ended up small. Also creating RenPy assets requires a very strict set of file naming and art styles (The classic anime girl cut in half from the torso).
The desk part of the art asset was not a good idea in hindsight.

How to overcome: Use up your break and suffer. 

Third, the Art assets were made in Clipstudio Art. The music asset was made in Soundtrap. The music asset also was helped along by my musically talented little brother who has more talent then me. 
The Art style was influenced by the likes of Darkest Dungeon. The Music was influenced by games like OneShot and other RPG maker games. The game idea was inspired by Paper's Please and Doki Doki Literature club.
*Also, I feel like Google Drive was a better place to upload coding then Github but most modding from games comes from GitHub anyway so I guess it makes sense, but they probably pay for the service to upload larger files. Google Drive you can upload a hella ton of files.*


Adversity: Ignorance. Ignorance of everything hindered us for like 99% of this project. 
- Also the time constraint was insane, especially, with all the other classes crunching down on us last minute. 
- Grandma kicking down the wifi for some reason.

Lesson learned: If you ever wanna develop a game be sure to conscript as many child slaves into your team so you can get free asset labour from them. Then proceed to upload everything onto Google Drive for safekeeping. Then you use YouTube for tutorials to do all the coding.
This is how all major video games are developed in the triple AAA industries. It's probably why Call of Duty hasn't changed for the last century. 

While we didn't finish anything we intended at the beginning we made sure that the code worked in the end. I hope you'll enjoy taking a look at our very short demo. :D




✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.FINAL PROJECT DEMO VIDEO RIGHT HERE GOOD SIR!!!!!✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.

~~~~~!!!!!!      YouTube link for the Final Project Demo Video: https://youtu.be/YVLusjbWca4   ~~~~~~ !!!!!
 

✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.✧˖°.







Below is just the text jumbo that we used to communicate ideas to each other. 
-----------------------------------------------------------------------------------------------------------------------


Script:


Hello Professor Rosen, I am Reuben and I will be a visual presenter for this group despite having withdrawn.
To start our project, the idea was to make a simple visual novel and have levels in it where you answer randomly generated math questions. There would be a score tracker for this which will decide if you lose or win, etc. 
It was basic enough for us to understand but hard enough that we had trouble actually implementing thoughts into reality.
To start this project Tony created the various art and music assets for the visual novel demo.
The Visual Assets were done in ClipStudio Art and the music was done in Soundtrap.
Subhan created the math question generator along with the score tracker in python.
We didn’t have time to implement Subhan’s code into Ren’ Py’ itself as you may imagine, the latter part would be more difficult. But Tony managed to get his assets to work somewhat for a Demo.
The Gui.Rpy, Screen.Rpy, Options.rpy was modified in specific portions so that the Demo will work. The original code from Ren’ Py’ remains the same. 
The script to run this Demo along with all the assets are available on Github if you wanna personally play it. While it is a short demo, Tony thinks that the music and art will be appreciated better up close. 

Proceed to Visual Novel Demo
The demo till the end.

End video.



Main Outline:

Start Video


Discuss Score Tracker and Questions Generator.
Run through Ren Py with the modified Script
Show all the Art Assets
Show all the Music Assets
Mention that the Professor can run the Script with assets through Ren’ Py to play the demo himself if he wants to.


End Video







-------------------------------------------------------------------------------------------------------------------------------


Plan B for turn-in time on Monday:
    Thesis: Instead of combining everything like what we set out to do because now we know it's space-time impossible we must:
        - Create the basic functions of our theoretical game. They also must work to some degree.
                - Points tracker   --- Done
                - Score tracker --- Done
                - Points tracker with score tracker ---- Done
                - Visual novel demo (that works with all audio and visual novel assets) --- Done


Main Visual Novel Demo --- Tony
Video Recording -- Reuben


The main focus right now is to make sure the most basic things work. Maybe we can combine them later down the road but it is likely not possible with the time constraints. 


Dropped Content:
Boss battle -- Cut
Difficulty selection -- Cut
Health potion addition to Score+Question generator code - Cut







------------------------------------ Before Final Crunch Period -----------------------------------------------

# Very basic idea of the Final Project:
#    Make a visual novel game with randomly generated "math" as a gameplay element. Along with Text, Sprites. There will be an "Hp" system and a point tracker that will be the main core of the game loop.

# In summary:
#  So the player does a math question, changes the screen, tracks points, and program loops. If a player loses all "hp" points game ends.
# This formula is simple enough for us to initiate probably but then we add stuff like:
#          - Dialouge options
#          - Health potions "Regain points"
#          - Dialogue options during "gameplay"


# [Just moving the proposal here so y'all can use it to see what Ideas we have:

## What will (likely) be the title of your project?
    The likely title of our project would be: "Border Math Verification".

## In just a sentence or two, summarize your project. (E.g., "A website that lets you buy and sell stocks.")
    A visual novel game that has randomly generated math questions that the user answers under a certain time limit. The "HP" system will keep track of the amount of total points lost before the game ends.
    The "story" element will come second after the code, it will use the math questions worded in a way to simulate checking papers at a dangerous DMZ area, similar to Paper's Please.

## In a paragraph or more, detail your project. What will your software do? What features will it have? How will it be executed?
    The project will use Ren' Py' for the project's visual novel element, since Ren' Py' runs on Python we can probably implement some sort of random math question generator into it. The features it will have are basic but fun for the user to interact with.
    It will be executed by four simple principles:
        1) A random math question generator:
              - It should have the ability to get more difficult between the sections.
              - It should have the ability to be formatted into any sentence structure: Ex: 
                  "You need to verify the authenticity of the passports. 
                  This passport has a 10-digit numerical code, and the sum of the first five digits is 27, while the sum of the last five digits is 23, what is the total sum of all the digits on the passport?"
              [ The numbers will be replaced randomly, but the structure of the question will stand for each run of the game. ]
              - It needs to run its own question so that the answer is given back correctly. The answer to the question above would be:
                  "The sum of all the digits on the passport is 50. Verification complete."
        2) A "HP" points tracker:
            - It should have the ability to remember the user's current score and deduct the score based on incorrect answers or going over the time limit.
            - It should be implemented with different texts for each consequence:
                  "Attention Customs Officer. You have gone over the time limit for each person. We will transfer this individual's verification to another booth. 
                    Your efficiency score has been deducted by 5."
                  "Current efficiency score is 95"
        3) Visual Novel assets:
            - The art assets and audio elements should fit in with the overall theme of the game.
            - It should change with every change in "cutscene".
        4) Text system:
            - The text system should run on some sort of Boolean method so that it displays a correct message when the player does something.
            - It should allow the player to make choices and display an answer to that choice:

                  "The old woman hands you a cheap amulet: "Please this is all I have. Can I please pass?"
      
                        [ Let her through ]                    [ "I am sorry" ]


    These systems should be modifiable and flexible to any changes or additions. The "gameplay loop" should be perfected, and should be simple enough to complete but not basic enough to be boring.
    The most important element is the question generator and the points tracker.

## If planning to combine 1051's final project with another course's final project, with which other course? Which aspect(s) of your proposed project would relate to 1051, and which aspect(s) would relate to the other course?
    [ Not planning to combine any final projects from another course's project according to my knowledge ]

## If planning to collaborate with 1 or 2 classmates for the final project, list their names, email addresses, and the names of their assigned TAs below.

    Names:          Emails:                    Assigned TAs:
    Tony Zhang      tul64513@temple.edu        Xinwen Zhang
    Reuben          tul08362@temple.edu        Amirhossein  Baghghadam
    Subhan          tu10278@temple.edu         Amirhossein  Baghghadam


## In the world of software, almost everything takes longer to implement than you expect. And so it's not uncommon to accomplish less in a fixed amount of time than you hope.

### In a sentence (or list of features), define a GOOD outcome for your final project. I.e., what WILL you accomplish no matter what?
        Good outcome: Must have a working math questions generator. Must have a working points tracker.
            If these aren't accomplished then we have no game.
    

### In a sentence (or list of features), define a BETTER outcome for your final project. I.e., what do you THINK you can accomplish before the final project's deadline?
        Better outcome: Have enough art assets for visual elements and plan out a good story for the visual novel.
            - Combined with the other code the visual novel should be amusing enough for a linear run.

### In a sentence (or list of features), define a BEST outcome for your final project. I.e., what do you HOPE to accomplish before the final project's deadline?
        Best outcome: After doing all 4 principles in an early manner we can implement additional things to the project that will make it perfect.
            - Instead of having a linear element to the visual novel we can branch out to different options for the players and introduce additional concepts:
                    - Boss events
                    - "Hp" recovery events
                    - Dialogue branches
                    - Difficulty selection
                    - Music? Sound effects?
                    - Etc.

    The best outcome is if the basic backbone is finished and we can fall back on it just in case. A good outcome must be achieved beforehand. 

## In a paragraph or more, outline your next steps. What new skills will you need to acquire? What topics will you need to research? If working with one of two classmates, who will do what?
        The next step is to acquire the basic know-how of using Ren' Py' and Python. The topics that will need to be researched are mainly scripting.
        The first thing we need to do is experiment with a random math question generator.

        The workload will be divided up as:

        Tony -  Art + Text
        Reuben  - Points tracker
        Subhan  - Math questions generator

        This work focus should be interchangeable; therefore, we can switch in between these roles.

        The second step is to create a bunch of "Example assets" and then implement the math question generator into Ren' Py' with these assets.

        Then we focus on the "points tracker". Implement that into Ren' Py' with example assets. 

        Once these main components are finished we move on to the third step of decoration with proper art assets and text dialogue with an interesting story.

        Gameplay > Story.







⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⠀⠀⠀⠀⠀⢀⣶⣦⠤⡠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⢀⡀⠬⠋⠀⠀⠙⢦⣄⣵⡟⡊⣀⡐⠈⢭⡓⢅⠤⠄⡄⢀⢄⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⣀⣖⡔⠚⡇⡅⠷⢤⠀⠀⢉⡊⠗⠀⠀⠀⣇⡐⠁⠁⠁⠀⡈⠁⠁⠀⠋⠘⠊⠘⠃⢦⡄⠂⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣂⢠⡖⠀⠁⠁⠠⠀⠅⠀⠀⠀⠁⡔⠀⠀⠀⠀⠀⠀⠀⡆⠀⠀⠀⡀⠀⠀⠂⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠜⠜⠦⣠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢠⠼⠖⠋⠂⠀⠀⠀⡀⡀⠁⠀⠀⢀⠈⠀⠗⠀⠀⠀⠄⠀⢀⠤⣆⠀⠀⠀⠀⡆⠀⠈⠁⠒⠄⠄⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠚⠃⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡀⠖⠊⠋⠀⠈⠀⠀⠀⠀⠀⠇⠀⠀⠀⠀⢰⡁⠆⠀⠀⠀⠀⢘⡆⠀⠻⠋⠆⡀⠀⠀⠀⠆⡀⠀⠀⠀⠰⠌⠁⠄⡀⠀⠀⠀⠀⠀⠀⠉⠀⠑⡆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⣄⡤⡶⠙⠛⡀⠐⠈⠀⠀⠀⠀⠀⠀⠠⠔⠁⠀⠀⠀⠁⡘⠘⡟⠀⠀⠀⠀⠀⠀⣺⡀⠀⠈⢸⠈⢕⠀⠉⠀⠉⠂⣀⡀⠀⠁⣄⠀⠀⢅⠤⡄⠀⠀⠀⠀⠈⠀⢝⣅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠃⠆⢈⢗⣢⡠⡄⠀⠀⠀⢀⠀⠀⠀⢠⢀⠀⠁⠀⠀⠀⡄⠁⡜⠀⠸⡆⠀⠀⠀⠀⠀⠀⢰⡅⠀⠀⠈⢁⢄⡀⠠⠄⠀⠀⠀⠛⡄⡀⠄⠰⠀⠅⠀⠘⠑⠀⠀⠀⠀⠀⠀⠚⢲⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⡍⢂⣀⠄⠈⠠⢀⠁⠀⠀⠀⠂⡤⠀⢀⡆⠀⢹⠄⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⢹⡖⠀⠀⠀⠂⡀⠀⠀⠈⠒⢆⣧⠛⠀⠀⠀⠈⠃⠀⣠⡀⢀⠀⠀⠙⢇⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⣆⠆⢣⠗⠀⢀⢀⣈⠄⠈⠁⠀⠂⠉⢁⡦⢸⠁⠀⠨⠀⠀⠀⠀⠀⠀⠀⢀⢳⠀⠀⠀⠀⠀⢺⡡⡆⠀⠀⠁⠃⠀⠀⠀⠀⠉⠋⡆⠄⠆⠀⠀⠀⠓⢀⠂⡠⠠⠀⠺⡂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡚⡛⠁⠀⠀⡃⠀⠀⢆⠏⠀⢐⡄⠈⠀⠀⠀⠂⠟⡇⠀⠀⢘⡀⠀⠀⠀⠀⠀⠀⠀⣻⡆⠀⠀⠀⠀⠈⠅⠁⣀⠀⠀⠀⠀⠀⠑⠉⠀⠀⠡⡂⠀⠰⠀⠀⠀⠙⢁⠀⢬⡾⠧⡷⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢢⡾⠉⠀⠀⠀⢹⠀⠀⠀⢀⡌⠁⠀⠀⠀⡐⡔⠀⠀⠰⠏⠀⠀⠀⠘⠂⠀⠀⠀⡀⠀⠀⠀⠀⡧⠀⠀⠀⠀⠀⣳⠄⠀⠃⡒⠄⠀⠀⠀⠀⠀⠀⠉⠅⠀⠀⠅⠀⠀⠀⠀⠀⠀⠹⣆⠀⠙⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣦⠗⠀⠀⠀⠀⣈⡇⠀⢠⣖⡀⠁⠁⠀⡀⡃⣡⣄⠀⢀⠫⠀⠀⠀⢐⡣⠀⠀⠀⠺⠄⠀⠀⠀⠀⠧⠀⠀⠀⠀⠀⠆⢀⣀⣴⣿⣾⣶⣦⡄⠀⠀⠀⣅⡀⠀⠈⡃⠀⠀⠀⠀⠀⠀⢛⡧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢐⡞⡯⠀⠀⠀⠀⡠⢌⣋⠄⠀⢱⠀⠁⠀⠅⣨⣾⡟⠛⠿⠷⣎⡀⠷⠀⠀⠃⠁⠀⠀⠀⡇⠀⠀⠀⠀⠒⠀⡀⡀⠀⣤⣷⡛⠁⠁⠀⠀⠉⠝⠙⠿⣧⣝⢽⡀⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀⠶⡴⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣇⠅⠀⠀⠀⢀⢔⣶⠁⡤⠈⠀⡠⠢⠈⣀⣖⢟⠽⠁⠀⠀⠀⠀⠀⣏⠀⠀⠆⢀⡂⠀⠀⠀⠾⠀⠀⠀⠀⡹⡐⠻⠇⠀⠁⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣄⠉⠃⡇⠀⠀⠀⠳⠀⠀⠀⠀⠀⠀⢂⠀⠺⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣄⠝⠀⠀⢤⣰⠂⢋⠟⠁⡠⡋⡀⡀⢀⠦⡾⠋⠀⣌⠁⠀⠀⠀⠀⠀⠀⠘⡄⠸⠃⡑⡃⠀⠀⠀⢤⠀⠀⠀⠀⣽⠀⠀⢙⠀⢠⡣⠀⠀⠀⠀⢀⣤⡄⠀⠀⠨⡥⠀⠀⢻⠄⠀⠀⠀⠡⠀⠀⠀⠀⠀⠐⠂⠀⠫⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢴⡼⢷⠖⠚⠁⠈⠁⣎⡃⠀⢠⢮⠦⢀⠠⠇⠀⠀⠀⢀⡖⠀⣀⣴⣬⣷⣦⠀⠀⢃⡇⠀⠀⢧⡀⠀⠀⣇⠀⠀⠀⡌⠀⠀⠀⠘⣤⡹⣀⣔⣾⠿⣿⡷⣦⡀⠀⠀⢵⠀⠀⢸⡀⠀⠀⠘⢞⣂⠀⠀⠀⢀⡁⠁⠀⠀⠙⣷⡀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣏⠀⣨⠀⢀⠢⠁⢤⡄⢠⣤⣾⣿⡯⠛⠁⠀⠈⣿⠷⢄⠃⠀⠀⠀⠈⢢⠀⢜⠀⠀⣠⠇⠀⠀⢀⣸⡗⡫⣿⡏⠀⠀⠀⠀⠉⡝⣿⡀⠈⡇⠀⠸⠁⠀⠀⠀⡆⠉⠇⠀⠀⠀⠂⢰⡄⠀⠀⠀⠀⠐⢻⡉⢛⡋⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⠀⠀⠀⡟⡃⠚⡁⠁⠈⡂⠀⣐⠄⠀⣀⡏⢿⣇⠀⠀⠀⠀⠀⣿⠄⠀⠀⠀⠀⠀⠀⠀⠁⠍⡇⣠⠋⠀⠀⠀⠀⠁⠈⠀⠀⣽⡄⠀⠀⠀⠀⠀⣾⠇⠀⡰⠀⢠⢸⠀⠀⠀⣖⢢⡄⢵⠀⠀⡄⠀⠀⠈⢦⠀⠀⠀⢐⣿⡏⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣛⢳⠿⣿⢖⠂⠂⠀⢨⠟⠀⠎⢄⠀⠏⣷⠀⠀⠻⢤⡀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡖⡙⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⣤⠏⠁⠀⠀⡉⢀⡄⡎⠀⠀⠀⠆⠀⢍⠸⡄⠀⠁⠀⠀⠀⠊⠧⢲⡾⠇⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠓⣮⣓⡎⡀⡆⠀⠈⡍⠀⡃⢑⡄⡏⢿⢯⠀⠀⠀⠀⣀⠉⠈⡁⠀⡀⠀⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⡁⡜⠁⡏⠀⡰⡧⠀⠀⢠⠐⠾⠀⠀⠀⠀⠀⠀⢰⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠝⡽⡟⠶⠁⠅⣈⠁⠀⠆⡇⠀⢺⠀⢷⠘⢄⠀⠊⠁⠀⠟⠁⡼⠀⠀⠀⠀⠀⠀⠀⢀⣖⠀⠀⠀⠀⠀⠀⠳⡀⢳⡀⠙⡄⠀⠀⠀⠀⠀⠀⠀⠀⢠⠯⣣⠃⠠⢁⠞⠃⠓⠀⠀⠈⠁⢴⠀⠀⠀⠀⠀⠀⢓⣇⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠗⠀⣧⣊⡇⣠⠓⠀⠀⠌⠭⡄⠀⣷⠀⠙⣦⡤⠦⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠛⠁⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⢁⢖⡃⠸⠫⡗⠁⠀⡆⠀⠀⡀⠏⠀⠃⠀⠀⠀⠀⢰⡏⠉⠁⠉⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣸⢎⠘⡇⠀⠀⢠⠀⢽⡋⣗⠠⣤⣚⢇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠁⠸⡦⠋⣰⠃⠀⢀⡦⠀⠀⠔⠀⣠⢹⠀⠀⠀⠀⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡷⠆⠀⣢⡀⠀⡐⣰⣟⠆⠀⠈⠘⠐⣩⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣲⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⢞⡃⢉⣀⣠⣴⢏⠁⡠⠇⠀⣠⠅⠕⠀⡰⠀⡏⠁⠀⣅⡀⣀⡯⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡯⠀⠀⠜⢽⠥⡴⡷⠏⣗⠀⠻⢢⠀⠉⠃⠸⢡⡤⠀⠀⡀⡀⡀⠠⠐⠘⠋⠁⠉⠁⢄⣀⣀⡀⠀⠀⠀⠀⠀⡀⡀⠤⠅⠁⠁⠑⢲⡖⠂⠊⠉⢻⣥⣇⠐⣂⡰⠃⠀⠀⡇⣴⠟⠙⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢋⣍⣤⡄⢀⢷⡞⠁⠀⠀⡀⡈⠡⡄⠀⠉⢦⡀⠀⠀⠵⡶⡋⠅⡁⢠⡀⠉⠁⠀⠀⠀⢀⣀⢀⡀⠀⠊⠭⢠⡉⠀⠀⠀⡀⡐⠄⠁⠀⠀⠀⠙⠀⡐⠜⡛⡟⠋⠙⠙⢦⣞⣺⡋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠋⢱⡭⠇⣽⣏⠆⠄⠀⠀⠘⢂⠈⠓⠠⡀⠀⠰⣤⠀⠀⠈⢀⡠⡀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠈⠁⠲⠠⣀⢒⠄⠀⠀⠀⣠⠤⠂⢉⣑⠄⠉⡀⣈⠁⠀⠀⠀⠌⠐⣷⡅⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠤⠃⠀⢼⠏⠀⣸⢣⢁⠓⠅⠆⠀⠐⠃⢂⠀⠀⠖⠀⠀⠀⠑⢢⡀⠀⠈⠀⠀⠐⠂⠊⠚⠀⠫⠉⠁⠚⠀⡀⢀⠀⠀⡴⠊⠁⡀⣀⣀⡠⠂⠁⠀⡤⠇⠂⠀⠀⢀⡐⠊⠀⠀⠀⡝⠅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⠚⠓⠛⠑⣃⠃⠀⠉⠀⠀⠀⡄⠀⠣⡦⡀⠀⠀⠀⠀⠀⠀⠉⠊⠉⠀⠉⠈⠀⠀⠀⢄⡄⠀⢠⠄⠤⠗⢀⢘⠂⠀⠀⠀⠀⠀⠀⠀⠰⠇⠀⠀⢀⢀⠀⠃⠀⠀⠪⠙⠢⠛⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢃⠚⠿⢄⣄⠆⢗⡓⠀⠀⠀⠀⢀⡀⠓⠀⡀⠀⠘⠂⠀⢀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⢀⠄⢀⡀⠀⠀⠀⠀⠁⠹⠖⡖⠐⠋⠁⠀⠄⠐⠉⠀⠀⠀⣄⠇⠐⠂⠀⠀⢈⢿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠌⠀⠀⠀⠀⠁⠁⠡⠔⠄⡤⠅⠪⠅⠐⠆⢄⠀⠙⠂⣄⠀⠀⠀⠀⠀⠈⠀⠉⠐⠊⠀⠘⠐⠘⠀⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠠⠃⠀⡁⢴⠂⡍⠀⠁⠀⠀⠀⡀⡞⠃⢻⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠧⡀⠀⠈⠡⡀⠈⠑⠶⢄⠈⠈⠲⠄⣀⠀⠀⠀⠀⠀⠀⠀⡀⡀⠀⡄⠤⠆⠆⠀⠀⠉⠁⠀⠁⠉⠉⠒⠃⠁⠠⠄⠄⠉⠁⠀⠀⠁⠠⡆⣊⠗⠛⠓⠟⡕⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠂⢈⡟⠍⠴⡀⠀⠀⠀⠁⠒⠤⠠⠁⠉⠀⠀⢁⠐⠛⠁⠀⢀⠀⡀⠀⣄⠖⠢⠂⠂⠃⠒⠙⠂⠒⠀⠔⠄⣤⠤⠒⠎⠀⠀⠀⠀⠁⠀⡀⣀⢄⠦⠨⢻⣇⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠙⢣⡐⠢⡀⠀⠀⠉⠁⠀⠁⠀⠉⠐⠀⠀⠀⠉⠀⠀⠀⠂⡴⡤⡠⡀⡀⠀⡀⣀⠀⠀⡀⠀⠀⣀⡀⢀⠲⠀⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠋⠋⡧⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠈⠉⠁⠊⠁⠲⠐⠠⡤⠀⠀⢤⠟⠊⠁⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀







⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
easter egg link: https://www.youtube.com/watch?v=XEQoExkyThk&ab_channel=yabe 
